package com.andrewcamero.jdbc;

import java.sql.Connection;
import java.net.URL;
import org.apache.commons.lang3.exception.ExceptionUtils;
import org.apache.logging.log4j.LogManager;
import java.util.Properties;
import org.apache.logging.log4j.Logger;

public class DBConnection
{
    private static Logger logger= LogManager.getLogger(DBConnection.class);;
    private static Properties daily_reset;
    private static String schema;
    private static String username;
    private static String password;
    private static String url;
  
    static {
       
        loadProperties();
    }
   
    private static void loadProperties() {
        String propertiesFile = "daily_reset.properties";
        try {
            daily_reset = new Properties();
            URL uniformResourceLocator = ClassLoader.getSystemResource(propertiesFile);
            daily_reset.load(uniformResourceLocator.openStream());
        }
        catch (Exception e) {
            DBConnection.logger.error(ExceptionUtils.getStackTrace(e));
            System.exit(1);
        }        
    }
    
    private void init() {
        username = daily_reset.getProperty("username");
        password = daily_reset.getProperty("password");
        url = daily_reset.getProperty("url");
        schema = daily_reset.getProperty("schema");
    }
   
    public static void runSQL() {
        Connection connection = ConnectionManager.getDBConnection(DBConnection.url, DBConnection.username, DBConnection.password);
        DBConnectionDAOImpl impl = new DBConnectionDAOImpl();
        
        impl.executeSQL(connection, schema);
        
        ConnectionManager.closeConnection(connection);
    }
   
    public static void main(String[] aa) {
        long startTime = System.nanoTime();
        
        DBConnection dbConnection = new DBConnection();
        dbConnection.init();
        runSQL();
        long endTime = System.nanoTime();

        DBConnection.logger.debug("Took " + (endTime - startTime) / 1000000000L + "s");
    }
}